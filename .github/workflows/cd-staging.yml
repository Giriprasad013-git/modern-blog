name: Deploy to Staging

on:
  push:
    branches: [ develop ]

jobs:
  deploy:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    environment: staging
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Create .env file
        run: |
          echo "VITE_SUPABASE_URL=${{ secrets.SUPABASE_URL }}" > .env
          echo "VITE_SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }}" >> .env
          echo "VITE_APP_URL=${{ secrets.APP_URL }}" >> .env
          echo "VITE_APP_NAME=${{ secrets.APP_NAME }}" >> .env

      - name: Build main site and CMS
        run: npm run build:all
        
      # Create a simple file to verify deployment
      - name: Create verification file
        run: |
          echo "<!DOCTYPE html><html><head><title>Staging Verification</title></head><body><h1>Staging Deployment Successful!</h1><p>This file confirms the staging deployment worked. Deployed at: $(date)</p></body></html>" > ./dist/verify.html
          echo "<!DOCTYPE html><html><head><title>CMS Staging Verification</title></head><body><h1>CMS Staging Deployment Successful!</h1><p>This file confirms the CMS staging deployment worked. Deployed at: $(date)</p></body></html>" > ./dist-cms/verify.html
        
      # Enhanced debug info for FTP paths
      - name: Validate FTP path format
        run: |
          echo "Using staging FTP paths:"
          echo "Main site staging: /public_html/staging/"
          echo "CMS staging: /public_html/staging-cms/"
        
      - name: Validate FTP Configuration
        id: validate-sftp
        run: |
          if [ -z "$FTP_SERVER" ] || [ -z "$FTP_USERNAME" ] || [ -z "$FTP_PASSWORD" ]; then
            echo "::warning::Missing FTP configuration. Skipping deployment."
            echo "skip_deployment=true" >> $GITHUB_OUTPUT
          else
            echo "FTP configuration is valid."
            echo "skip_deployment=false" >> $GITHUB_OUTPUT
          fi
        env:
          FTP_SERVER: ${{ secrets.FTP_SERVER }}
          FTP_USERNAME: ${{ secrets.FTP_USERNAME }}
          FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}

      - name: Deploy main site to Hostinger via FTP (Staging)
        if: steps.validate-sftp.outputs.skip_deployment != 'true'
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./dist/
          server-dir: /public_html/staging/
          dangerous-clean-slate: false
          
      - name: Deploy CMS to Hostinger via FTP (Staging)
        if: steps.validate-sftp.outputs.skip_deployment != 'true'
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./dist-cms/
          server-dir: /public_html/staging-cms/
          dangerous-clean-slate: false
          
      - name: Notify on success
        if: success() && env.SLACK_WEBHOOK_URL != ''
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "✅ Staging deployment successful! Sites are live at ${{ secrets.STAGING_URL }}/verify.html and ${{ secrets.CMS_STAGING_URL }}/verify.html"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL || '' }}
          
      - name: Notify on failure
        if: failure() && env.SLACK_WEBHOOK_URL != ''
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "❌ Staging deployment failed! Check the logs: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL || '' }} 